// Code generated by goctl. DO NOT EDIT!
// Source: jaeger.proto

package server

import (
	"context"

	"github.com/1005281342/gozerodemo/rpc/jaeger/internal/logic"
	"github.com/1005281342/gozerodemo/rpc/jaeger/internal/svc"
	"github.com/1005281342/gozerodemo/rpc/jaeger/jaeger"
)

type JaegerServer struct {
	svcCtx *svc.ServiceContext
}

func NewJaegerServer(svcCtx *svc.ServiceContext) *JaegerServer {
	return &JaegerServer{
		svcCtx: svcCtx,
	}
}

func (s *JaegerServer) Node1(ctx context.Context, in *jaeger.NodeReq) (*jaeger.NodeRsp, error) {
	l := logic.NewNode1Logic(ctx, s.svcCtx)
	return l.Node1(in)
}

func (s *JaegerServer) Node2(ctx context.Context, in *jaeger.NodeReq) (*jaeger.NodeRsp, error) {
	l := logic.NewNode2Logic(ctx, s.svcCtx)
	return l.Node2(in)
}

func (s *JaegerServer) Node3(ctx context.Context, in *jaeger.NodeReq) (*jaeger.NodeRsp, error) {
	l := logic.NewNode3Logic(ctx, s.svcCtx)
	return l.Node3(in)
}
